@page "/epkrs/dashboard"
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject Blazored.SessionStorage.ISyncSessionStorageService syncSessionStorage
@inject IEPKRSService EPKRSService
@inject ILoginService LoginService
@inject IManagementService ManagementService
@inject NavigationManager navigate
@inject IJSRuntime JS

<PageTitle>EPKRS - Dashboard</PageTitle>

@if (LoginService.activeUser == null)
{
    <p>Loading...</p>
}
else
{
    if (LoginService.activeUser.userPrivileges != null)
    {
        @if (!LoginService.activeUser.userPrivileges.Contains("VW"))
        {
            <div class="container-fluid">
                <div class="d-flex align-items-center">
                    <h3>User Require Elevation</h3>
                </div>
            </div>
        }
        else
        {
            <h3>EPKRS</h3>
            <small><i>EPKRS Dashboard</i></small>

            @if (alertTrigger)
            {
                <div class="alert alert-warning alert-dismissible fade show my-3" role="alert">
                    <strong>@alertMessage</strong> @alertBody
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close" @onclick="(() => alertTrigger = false)">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }


            @if (successAlert)
            {
                <div class="alert alert-success alert-dismissible fade show my-3" role="alert">
                    <strong>@alertMessage</strong> @alertBody
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close" @onclick="(() => successAlert = false)">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }
            
            
            <div class="container-fluid">
                
                @if (activeUser.location.Equals("") && LoginService.activeUser.userPrivileges.Contains("XP"))
                {

                    <div class="row mt-3">
                    
                        <div class="col">

                            <div id="accordionStats" style="width: 100%;">

                                <div class="card" style="width: 100%;">
                                    <div class="card-header" id="epkrsstats">
                                        <div class="border border-1">
                                            <button id="epkrsstatstitle" class="btn w-100" data-toggle="collapse" data-target="#epkrsstatsdata" aria-expanded="true" aria-controls="epkrsstatsdata">
                                                <b>EPKRS General Statistics</b>
                                            </button>
                                        </div>
                                    </div>

                                    <div id="epkrsstatsdata" class="collapse" aria-labelledby="epkrsstatstitle" data-parent="#accordionStats">
                                        <div class="card-body">

                                            <ul class="nav nav-pills nav-fill my-1">
                                                <li class="nav-item">
                                                    <button type="button" class="nav-link" @onclick="(() => generalStatisticsFilterbyYear(selectedYearFilter - 2, false))">@(selectedYearFilter - 2)</button>
                                                </li>
                                                <li class="nav-item">
                                                    <button type="button" class="nav-link" @onclick="(() => generalStatisticsFilterbyYear(selectedYearFilter - 1, false))">@(selectedYearFilter - 1)</button>
                                                </li>
                                                <li class="nav-item">
                                                    <button type="button" class="nav-link active">@(selectedYearFilter)</button>
                                                </li>
                                                <li class="nav-item">
                                                    <button type="button" class="nav-link" @onclick="(() => generalStatisticsFilterbyYear(selectedYearFilter + 1, false))">@(selectedYearFilter + 1)</button>
                                                </li>
                                                <li class="nav-item">
                                                    <button type="button" class="nav-link" @onclick="(() => generalStatisticsFilterbyYear(selectedYearFilter + 2, false))">@(selectedYearFilter + 2)</button>
                                                </li>
                                            </ul>
                                            
                                            <ul class="nav nav-pills nav-fill my-1">
                                                @foreach (var month in monthSelector)
                                                {
                                                    <li class="nav-item mx-1" @onclick="(() => { monthSelector[month.Key] = !monthSelector[month.Key]; StateHasChanged(); })">
                                                        <button type="button" class="nav-link @(month.Value ? "active" : null)">@(new DateTime(selectedYearFilter, month.Key, 1).ToString("MMM"))</button>
                                                    </li>
                                                }
                                            </ul>

                                            <div class="row mb-2">
                                                <div class="col">
                                                    <button type="button" class="btn btn-sm btn-primary-cus w-100" disabled="@(generalStatisticsFiltered)" @onclick="generalStatisticsFilterbyMonth">Filter</button>
                                                </div>
                                                <div class="col">
                                                    <button type="button" class="btn btn-sm btn-dark w-100" disabled="@(!generalStatisticsFiltered)" @onclick="(() => generalStatisticsFilterbyYear(DateTime.Now.Year, true))">Reset</button>
                                                </div>
                                            </div>

                                            <div class="separator">General Data</div>

                                            <div class="row my-2">
                                                <div class="col">

                                                    @if (previewGeneralStatistics != null)
                                                    {
                                                        <div class="table-responsive">
                                                            <table class="table table-sm table-hover" style="width: 100%;">
                                                                <thead>
                                                                    <tr class="@(generalStatisticsRiskTypeFilterActive ? "table-success" : "table-primary")">
                                                                        <th class="text-center align-middle text-wrap" style="width: 17%;">Reporting Type</th>
                                                                        <th class="text-center align-middle text-wrap" style="width: 17%;">Risk Type</th>
                                                                        <th class="text-center align-middle text-wrap" style="width: 8%;">Total Reports</th>
                                                                        <th class="text-center align-middle text-wrap" style="width: 8%;">Open Reports</th>
                                                                        <th class="text-center align-middle text-wrap" style="width: 8%;">Approved Reports</th>
                                                                        <th class="text-center align-middle text-wrap" style="width: 8%;">On Progress Reports</th>
                                                                        <th class="text-center align-middle text-wrap" style="width: 8%;">Closed Reports</th>
                                                                        <th class="text-center align-middle text-wrap" style="width: 13%;">Report Total Value (Rp.)</th>
                                                                        <th class="text-center align-middle text-wrap" style="width: 13%;">Report Return Value (Rp.)</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    @foreach (var stat in previewGeneralStatistics)
                                                                    {
                                                                        var repId = EPKRSService.reportingTypes.SingleOrDefault(x => x.ReportingID.Equals(stat.ReportingID));
                                                                        var riskId = EPKRSService.riskTypes.SingleOrDefault(x => x.RiskID.Equals(stat.RiskID));
                                                                        
                                                                        <tr>
                                                                            <td class="text-center align-middle text-wrap">
                                                                                @if (repId != null) { @repId.ReportingDescription } else { @stat.ReportingID }
                                                                            </td>
                                                                                <td class="text-center align-middle text-wrap" id="filterSelector" @onclick="@(() => generalStatisticsFilterbyRiskType(stat.RiskID))">
                                                                                @if (riskId != null) { @riskId.RiskDescription } else { @stat.ReportingID }
                                                                            </td>
                                                                            <td class="text-center align-middle text-wrap">@stat.ReportTotalDocuments.ToString("N0")</td>
                                                                            <td class="text-center align-middle text-wrap">@stat.ReportTotalOpenDocuments.ToString("N0")</td>
                                                                            <td class="text-center align-middle text-wrap">@stat.ReportTotalApprovedDocuments.ToString("N0")</td>
                                                                            <td class="text-center align-middle text-wrap">@stat.ReportTotalOnProgressDocuments.ToString("N0")</td>
                                                                            <td class="text-center align-middle text-wrap">@stat.ReportTotalClosedDocuments.ToString("N0")</td>
                                                                            <td class="text-center align-middle text-wrap">Rp. @stat.ReportTotalValue.ToString("N0") ,-</td>
                                                                            <td class="text-center align-middle text-wrap">Rp. @stat.ReportReturnValue.ToString("N0") ,-</td>
                                                                        </tr>
                                                                    }
                                                                </tbody>
                                                                <tfoot>
                                                                    <tr>
                                                                        <td class="text-center align-middle text-wrap fw-bold" colspan="2">Grand Total</td>
                                                                        <td class="text-center align-middle text-wrap fw-bold">@previewGeneralStatistics.Sum(x => x.ReportTotalDocuments).ToString("N0")</td>
                                                                        <td class="text-center align-middle text-wrap fw-bold">@previewGeneralStatistics.Sum(x => x.ReportTotalOpenDocuments).ToString("N0")</td>
                                                                        <td class="text-center align-middle text-wrap fw-bold">@previewGeneralStatistics.Sum(x => x.ReportTotalApprovedDocuments).ToString("N0")</td>
                                                                        <td class="text-center align-middle text-wrap fw-bold">@previewGeneralStatistics.Sum(x => x.ReportTotalOnProgressDocuments).ToString("N0")</td>
                                                                        <td class="text-center align-middle text-wrap fw-bold">@previewGeneralStatistics.Sum(x => x.ReportTotalClosedDocuments).ToString("N0")</td>
                                                                        <td class="text-center align-middle text-wrap fw-bold">Rp. @previewGeneralStatistics.Sum(x => x.ReportTotalValue).ToString("N0") ,-</td>
                                                                        <td class="text-center align-middle text-wrap fw-bold">Rp. @previewGeneralStatistics.Sum(x => x.ReportReturnValue).ToString("N0") ,-</td>
                                                                    </tr>
                                                                </tfoot>
                                                            </table>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="alert alert-primary" role="alert">
                                                            <b>Data Empty !</b>
                                                        </div>                                                        
                                                    }

                                                </div>
                                            </div>

                                            <div class="separator">Incident Accident Regional Statistics</div>

                                            <div class="row my-2">
                                                <div class="col">
                                                    @if (previewRegionalStatistics != null)
                                                    {
                                                        <div class="table-responsive">
                                                            <table class="table table-sm table-hover" style="width: 100%;">
                                                                <thead>
                                                                        <tr class="@(generalStatisticsRegionalFilterActive ? "table-success" : "table-primary")">
                                                                        <th class="text-center align-middle text-wrap" style="width: 35%;">DORM</th>
                                                                        <th class="text-center align-middle text-wrap" style="width: 15%;">Total Document(s) Reported</th>
                                                                        <th class="text-center align-middle text-wrap" style="width: 25%;">Loss Estimation (Rp.)</th>
                                                                        <th class="text-center align-middle text-wrap" style="width: 25%;">Return Values (Rp.)</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    @foreach (var stat in previewRegionalStatistics)
                                                                    {
                                                                        <tr>
                                                                            <td class="text-center align-middle text-wrap" id="filterSelector" @onclick="(() => generalStatisticsFilterbyRegion(stat.DORMEmail))">@stat.DORMEmail</td>
                                                                            <td class="text-center align-middle text-wrap">@stat.TotalDocuments.ToString("N0")</td>
                                                                            <td class="text-center align-middle text-wrap">Rp. @stat.TotalValues.ToString("N0") ,-</td>
                                                                            <td class="text-center align-middle text-wrap">Rp. @stat.ReturnValues.ToString("N0") ,-</td>
                                                                        </tr>
                                                                    }
                                                                </tbody>
                                                                <tfoot>
                                                                    <tr>
                                                                        <td class="text-center align-middle text-wrap fw-bold">Total</td>
                                                                        <td class="text-center align-middle text-wrap fw-bold">@previewRegionalStatistics.Sum(x => x.TotalDocuments).ToString("N0")</td>
                                                                        <td class="text-center align-middle text-wrap fw-bold">Rp. @previewRegionalStatistics.Sum(x => x.TotalValues).ToString("N0") ,-</td>
                                                                        <td class="text-center align-middle text-wrap fw-bold">Rp. @previewRegionalStatistics.Sum(x => x.ReturnValues).ToString("N0") ,-</td>
                                                                    </tr>
                                                                </tfoot>
                                                            </table>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="alert alert-primary" role="alert">
                                                            <b>Data Empty !</b>
                                                        </div>                                                        
                                                    }
                                                </div>
                                            </div>

                                            <div class="separator">Incident Accident Involved Person Statistics</div>

                                            <div class="row my-2">
                                                <div class="col">
                                                    @if (previewInvolvedbyPosStatistics != null)
                                                    {
                                                        <div class="table-responsive">
                                                            <table class="table table-sm table-hover" style="width: 100%;">
                                                                <thead>
                                                                    <tr class="@(generalStatisticsPositionFilterActive ? "table-success" : "table-primary")">
                                                                        <th class="text-center align-middle text-wrap" style="width: 50%;">Position</th>
                                                                        <th class="text-center align-middle text-wrap" style="width: 25%;">Total Document(s) Reported</th>
                                                                        <th class="text-center align-middle text-wrap" style="width: 25%;"># Person(s) Involved</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    @foreach (var stat in previewInvolvedbyPosStatistics)
                                                                    {
                                                                        <tr>
                                                                            <td class="text-center align-middle text-wrap" id="filterSelector" @onclick="@(() => generalStatisticsFilterbyPosition(stat.InvolverPosition))">@stat.InvolverPosition</td>
                                                                            <td class="text-center align-middle text-wrap">@stat.TotalDocuments.ToString("N0")</td>
                                                                            <td class="text-center align-middle text-wrap">@stat.TotalInvolver.ToString("N0")</td>
                                                                        </tr>
                                                                    }
                                                                </tbody>
                                                                <tfoot>
                                                                    <tr>
                                                                        <td class="text-center align-middle text-wrap fw-bold" colspan="2">Total</td>
                                                                    <td class="text-center align-middle text-wrap fw-bold">@previewInvolvedbyPosStatistics.Sum(x => x.TotalInvolver).ToString("N0")</td>
                                                                    </tr>
                                                                </tfoot>
                                                            </table>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="alert alert-primary" role="alert">
                                                            <b>Data Empty !</b>
                                                        </div>                                                        
                                                    }
                                                </div>

                                                <div class="col">
                                                    @if (previewInvolvedbyDeptStatistics != null)
                                                    {
                                                        <div class="table-responsive">
                                                            <table class="table table-sm table-hover" style="width: 100%;">
                                                                <thead>
                                                                    <tr class="@(generalStatisticsDepartmentFilterActive ? "table-success" : "table-primary")">
                                                                        <th class="text-center align-middle text-wrap" style="width: 50%;">Department</th>
                                                                        <th class="text-center align-middle text-wrap" style="width: 25%;">Total Document(s) Reported</th>
                                                                        <th class="text-center align-middle text-wrap" style="width: 25%;"># Person(s) Involved</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    @foreach (var stat in previewInvolvedbyDeptStatistics)
                                                                    {
                                                                        <tr>
                                                                            <td class="text-center align-middle text-wrap" id="filterSelector" @onclick="@(() => generalStatisticsFilterbyDept(stat.InvolverDept))">@stat.InvolverDept</td>
                                                                            <td class="text-center align-middle text-wrap">@stat.TotalDocuments.ToString("N0")</td>
                                                                            <td class="text-center align-middle text-wrap">@stat.TotalInvolver.ToString("N0")</td>
                                                                        </tr>
                                                                    }
                                                                </tbody>
                                                                <tfoot>
                                                                    <tr>
                                                                        <td class="text-center align-middle text-wrap fw-bold" colspan="2">Total</td>
                                                                    <td class="text-center align-middle text-wrap fw-bold">@previewInvolvedbyDeptStatistics.Sum(x => x.TotalInvolver).ToString("N0")</td>
                                                                    </tr>
                                                                </tfoot>
                                                            </table>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="alert alert-primary" role="alert">
                                                            <b>Data Empty !</b>
                                                        </div>
                                                    }
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>

                            </div>

                        </div>

                    </div>
                
                    <div class="row">

                        <div class="col p-3">
                            <div id="accordionPanel" style="width: 100%;">

                                <div class="card" style="width: 100%;">
                                    <div class="card-header" id="epkrsmpanel">
                                        <div class="border border-1">
                                            <button id="epkrsmpaneltitle" class="btn w-100" data-toggle="collapse" data-target="#epkrsmpaneldata" aria-expanded="true" aria-controls="epkrsmpaneldata" @onclick="initializeChart">
                                                <b>EPKRS Monitoring Panel</b>
                                            </button>
                                        </div>
                                    </div>

                                    <div id="epkrsmpaneldata" class="collapse" aria-labelledby="epkrsmpaneltitle" data-parent="#accordionPanel">
                                        <div class="card-body">

                                            <ul class="nav nav-pills nav-fill my-1">
                                                <li class="nav-item">
                                                    <button type="button" class="nav-link" @onclick="(() => monitoringPanelFilterbyYear(selectedYearFilterChart - 2, false))">@(selectedYearFilterChart - 2)</button>
                                                </li>
                                                <li class="nav-item">
                                                    <button type="button" class="nav-link" @onclick="(() => monitoringPanelFilterbyYear(selectedYearFilterChart - 1, false))">@(selectedYearFilterChart - 1)</button>
                                                </li>
                                                <li class="nav-item">
                                                    <button type="button" class="nav-link active">@(selectedYearFilterChart)</button>
                                                </li>
                                                <li class="nav-item">
                                                    <button type="button" class="nav-link" @onclick="(() => monitoringPanelFilterbyYear(selectedYearFilterChart + 1, false))">@(selectedYearFilterChart + 1)</button>
                                                </li>
                                                <li class="nav-item">
                                                    <button type="button" class="nav-link" @onclick="(() => monitoringPanelFilterbyYear(selectedYearFilterChart + 2, false))">@(selectedYearFilterChart + 2)</button>
                                                </li>
                                            </ul>

                                            <ul class="nav nav-pills nav-fill my-1">
                                                @foreach (var month in monthSelectorChart)
                                                {
                                                    <li class="nav-item mx-1" @onclick="(() => { monthSelectorChart[month.Key] = !monthSelectorChart[month.Key]; StateHasChanged(); })">
                                                        <button type="button" class="nav-link @(month.Value ? "active" : null)">@(new DateTime(selectedYearFilterChart, month.Key, 1).ToString("MMM"))</button>
                                                    </li>
                                                }
                                            </ul>

                                            <div class="row mb-2">
                                                <div class="col">
                                                    <button type="button" class="btn btn-sm btn-primary-cus w-100" disabled="@(monitoringPanelFiltered)" @onclick="monitoringPanelFilterbyMonth">Filter</button>
                                                </div>
                                                <div class="col">
                                                    <button type="button" class="btn btn-sm btn-dark w-100" disabled="@(!monitoringPanelFiltered)" @onclick="(() => monitoringPanelFilterbyYear(DateTime.Now.Year, true))">Reset</button>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col align-middle text-center">
                                                    @if (previewTopLocationReportStatistics != null)
                                                    {
                                                        <canvas @ref="topLocationReportStatsRef" id="topLocationReportStats" class="border border-2 p-1 w-100"></canvas>
                                                    }
                                                </div>
                                                <div class="col align-middle text-center">
                                                    @if (previewItemCategoryStatistics != null)
                                                    {
                                                        <canvas @ref="itemCategoryStatsRef" id="itemCategoryStats" class="border border-2 p-1 w-100"></canvas>
                                                    }
                                                </div>
                                            </div>

                                            <div class="row my-2">
                                                <div class="col align-middle text-center">
                                                    @if (previewItemCaseCategoryStatistics != null)
                                                    {
                                                        <canvas @ref="itemCaseValueStatsRef" id="itemCaseValueStats" class="border border-2 p-1 w-100"></canvas>
                                                    }
                                                </div>
                                                <div class="col align-middle text-center">
                                                    @if (previewItemCaseCategoryStatistics != null)
                                                    {
                                                        <canvas @ref="itemCaseCategoryStatsRef" id="itemCaseCategoryStats" class="border border-2 p-1 w-100"></canvas>
                                                    }
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>

                    </div>
                }


                <div class="row">
                    <div class="col">
                        <div class="border border-2 my-3 p-2">
                            <h5 class="float-lg-end"><b>Ongoing EPKRS Document</b></h5>
                            <ul class="nav nav-pills flex-column flex-sm-row" id="myTab" role="tablist">
                                <li class="nav-item">
                                    <a class="nav-link active" id="itemcase-tab" data-toggle="tab" href="#itemcase" role="tab" aria-controls="itemcase" aria-selected="true">Item Case &lt; @itemCasePageActive of @itemCaseNumberofPages &gt;</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="incac-tab" data-toggle="tab" href="#incac" role="tab" aria-controls="incac" aria-selected="false">Incident/Accident &lt; @incidentAccidentPageActive of @incidentAccidentNumberofPages &gt;</a>
                                </li>
                            </ul>

                            <div class="tab-content" id="myTabContent">
                                <div class="tab-pane fade show active" id="itemcase" role="tabpanel" aria-labelledby="itemcase-tab">
                                    @if (checkItemCaseData())
                                    {
                                        <div class="m-2 p-1">
                                            @foreach (var itemCase in EPKRSService.itemCases)
                                            {
                                                <div class="card my-1">
                                                    <div class="card-body">
                                                        <div class="row">
                                                            <div class="col align-middle my-auto" style="text-align: center;">
                                                                <h5 class="card-title mb-2 text-muted">@itemCase.itemCase.DocumentID</h5>
                                                                @{
                                                                    var itcRiskSubType = EPKRSService.riskSubTypes.SingleOrDefault(x => x.SubRiskID.Equals(itemCase.itemCase.SubRiskID));
                                                                    var itcRiskType = EPKRSService.riskTypes.SingleOrDefault(x => x.RiskID.Equals(itcRiskSubType.RiskID));
                                                                }
                                                                <h6 class="card-subtitle">
                                                                    @(itcRiskType != null ? itcRiskType.RiskDescription : "")
                                                                    <br />
                                                                    @(itcRiskSubType != null ? itcRiskSubType.SubRiskDescription : "")
                                                                </h6>
                                                                <br />
                                                                @if (ManagementService.locations.SingleOrDefault(x => x.locationId.Equals(itemCase.itemCase.SiteReporter)) != null)
                                                                {
                                                                    <h6 class="card-subtitle mb-2 text-muted">@ManagementService.locations.SingleOrDefault(x => x.locationId.Equals(itemCase.itemCase.SiteReporter)).locationName</h6>
                                                                }
                                                                else if (itemCase.itemCase.SiteReporter.Equals("HO"))
                                                                {
                                                                    <h6 class="card-subtitle mb-2 text-muted">HEAD OFFICE</h6>
                                                                }
                                                                else
                                                                {
                                                                    <h6 class="card-subtitle mb-2 text-muted">@itemCase.itemCase.SiteReporter</h6>
                                                                }
                                                            </div>
                                                            <div class="col">
                                                                <p class="card-text">
                                                                    <b> Loading Document No : </b> @itemCase.itemCase.LoadingDocumentID, @itemCase.itemCase.LoadingDocumentDate.ToString("dd / MM / yyyy")
                                                                    <br />
                                                                    <b> Report Date : </b> @itemCase.itemCase.ReportDate.ToString("dd / MM / yyyy")
                                                                    <br />
                                                                    <b> Variance Date : </b> @itemCase.itemCase.VarianceDate
                                                                    <br />
                                                                    <b> Document Status : </b> @itemCase.itemCase.DocumentStatus
                                                                </p>
                                                                <button class="btn btn-primary-cus mt-1" data-toggle="modal" data-target="#itemCasePreviewModal" @onclick="(() => setItemCasePreviewData(itemCase))"><i class="oi oi-document"></i> Preview Document</button>
                                                                <button class="btn btn-primary-cus mt-1" data-toggle="modal" data-target="#discussionModal" @onclick="(async () => await setDocumentDiscussionPreviewData(itemCase.itemCase.DocumentID, itemCase.itemCase.SiteReporter))"><i class="oi oi-chat"></i> Discussion Panel
                                                                    @{
                                                                        int? unreadCountA = null;

                                                                        if (EPKRSService.documentDiscussions.Count > 0 && EPKRSService.documentDiscussionReadHistories.Count > 0)
                                                                            unreadCountA = EPKRSService.documentDiscussions.ExceptBy(EPKRSService.documentDiscussionReadHistories.Select(f => f.rowGuid), g => g.rowGuid).Where(h => h.DocumentID.Equals(itemCase.itemCase.DocumentID)).ToList().Count;
                                                                    }
                                                                    @if (unreadCountA != null)
                                                                    {   
                                                                        <span class="badge bg-danger text-white">@unreadCountA.Value.ToString("N0")</span>
                                                                    }
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <p class="fw-bold text-center">. . . There is no Document . . .</p>
                                    }
                                </div>

                                <div class="tab-pane fade" id="incac" role="tabpanel" aria-labelledby="incac-tab">

                                    <form @onsubmit="incidentAccidentFilter">
                                        <div class="input-group my-3">
                                            <div class="input-group-prepend">
                                                <select class="form-select" @bind="incidentAccidentFilterType">
                                                    <option hidden disabled value="">Filter By</option>
                                                    <option value="ID">EPKRS ID</option>
                                                    <option value="LOC">Location</option>
                                                    <option value="STATUS">Status</option>
                                                </select>
                                            </div>
                                            <input type="text" class="form-control" aria-label="Text input with dropdown button" @bind-value="incidentAccidentFilterValue">
                                            <div class="input-group-append">
                                                <button class="btn btn-outline-secondary fw-bold" type="button" disabled="@(incidentAccidentFilterActive ? null : "disabled")" @onclick="resetIncidentAccidentFilter">Reset</button>
                                            </div>
                                        </div>
                                        <input type="submit" hidden>
                                    </form>
                                    
                                    @if (checkIncidentAccidentData())
                                    {
                                        <div class="m-2 p-1">
                                            @foreach (var incidentAccident in EPKRSService.incidentAccidents)
                                            {
                                                <div class="card my-1">
                                                    <div class="card-body">
                                                        <div class="row">
                                                            <div class="col align-middle my-auto" style="text-align: center;">
                                                                <h5 class="card-title mb-2 text-muted">@incidentAccident.incidentAccident.DocumentID</h5>
                                                                @{
                                                                    var incRiskSubType = EPKRSService.riskSubTypes.SingleOrDefault(x => x.SubRiskID.Equals(incidentAccident.incidentAccident.SubRiskID));
                                                                    var incRiskType = EPKRSService.riskTypes.SingleOrDefault(x => x.RiskID.Equals(incRiskSubType.RiskID));
                                                                }
                                                                <h6 class="card-subtitle">
                                                                    @(incRiskType != null ? incRiskType.RiskDescription : "")
                                                                    <br />
                                                                    @(incRiskSubType != null ? incRiskSubType.SubRiskDescription : "")
                                                                </h6>
                                                                <br />
                                                                @if (ManagementService.locations.SingleOrDefault(x => x.locationId.Equals(incidentAccident.incidentAccident.SiteReporter)) != null)
                                                                {
                                                                    <h6 class="card-subtitle mb-2 text-muted">@ManagementService.locations.SingleOrDefault(x => x.locationId.Equals(incidentAccident.incidentAccident.SiteReporter)).locationName</h6>
                                                                }
                                                                else if (incidentAccident.incidentAccident.SiteReporter.Equals("HO"))
                                                                {
                                                                    <h6 class="card-subtitle mb-2 text-muted">HEAD OFFICE</h6>
                                                                }
                                                                else
                                                                {
                                                                    <h6 class="card-subtitle mb-2 text-muted">@incidentAccident.incidentAccident.SiteReporter</h6>
                                                                }
                                                            </div>
                                                            <div class="col">
                                                                <p class="card-text">
                                                                    <b> Case Description : </b> @incidentAccident.incidentAccident.CaseDescription
                                                                    <br />
                                                                    <b> Report Date : </b> @incidentAccident.incidentAccident.ReportDate.ToString("dd / MM / yyyy")
                                                                    <br />
                                                                    <b> PIC : </b> @incidentAccident.incidentAccident.PIC
                                                                    <br />
                                                                    <b> Document Status : </b> @incidentAccident.incidentAccident.DocumentStatus
                                                                </p>
                                                                <button class="btn btn-primary-cus mt-1" data-toggle="modal" data-target="#incidentAccidentPreviewModal" @onclick="(() => setIncidentAccidentPreviewData(incidentAccident))"><i class="oi oi-document"></i> Preview Document</button>
                                                                <button class="btn btn-primary-cus mt-1" data-toggle="modal" data-target="#discussionModal" @onclick="(async () => await setDocumentDiscussionPreviewData(incidentAccident.incidentAccident.DocumentID, incidentAccident.incidentAccident.SiteReporter))"><i class="oi oi-chat"></i> Discussion Panel
                                                                    @{
                                                                        int? unreadCountB = null;

                                                                        if (EPKRSService.documentDiscussions.Count > 0 && EPKRSService.documentDiscussionReadHistories.Count > 0)
                                                                            unreadCountB = EPKRSService.documentDiscussions.ExceptBy(EPKRSService.documentDiscussionReadHistories.Select(f => f.rowGuid), g => g.rowGuid).Where(h => h.DocumentID.Equals(incidentAccident.incidentAccident.DocumentID)).ToList().Count;
                                                                    }
                                                                    @if (unreadCountB > 0)
                                                                    {
                                                                        <span class="badge bg-danger text-white">@unreadCountB.Value.ToString("N0")</span>
                                                                    }
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }

                                            <nav aria-label="Incident Accident Pagination">
                                                <ul class="pagination pagination-sm justify-content-center my-2">
                                                    @if ((incidentAccidentPageActive - 1) > 0)
                                                    {
                                                        <li class="page-item px-1 paging-style" @onclick="(() => incidentAccidentPageSelect((incidentAccidentPageActive - 1)))"><span class="page-link">Previous</span></li>
                                                        <li class="page-item paging-style" @onclick="(() => incidentAccidentPageSelect((incidentAccidentPageActive - 1)))"><span class="page-link">@(incidentAccidentPageActive - 1)</span></li>
                                                    }
                                                    else
                                                    {
                                                        <li class="page-item px-1 disabled dis-paging-style"><span class="page-link">Previous</span></li>
                                                        <li class="page-item disabled dis-paging-style"><span class="page-link">. . .</span></li>
                                                    }

                                                    <li class="page-item active dis-paging-style"><span class="page-link">@incidentAccidentPageActive</span></li>

                                                    @if (incidentAccidentPageActive < incidentAccidentNumberofPages)
                                                    {
                                                        <li class="page-item paging-style" @onclick="(() => incidentAccidentPageSelect((incidentAccidentPageActive + 1)))"><span class="page-link">@(incidentAccidentPageActive + 1)</span></li>
                                                        <li class="page-item px-1 paging-style" @onclick="(() => incidentAccidentPageSelect((incidentAccidentPageActive + 1)))"><span class="page-link">Next</span></li>
                                                    }
                                                    else
                                                    {
                                                        <li class="page-item disabled dis-paging-style"><span class="page-link">. . .</span></li>
                                                        <li class="page-item px-1 disabled dis-paging-style"><span class="page-link">Next</span></li>
                                                    }
                                                </ul>
                                            </nav>
                                        </div>
                                    }
                                    else
                                    {
                                        <p class="fw-bold text-center">. . . There is no Document . . .</p>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        }   
    }
    else
    {
        <div class="container-fluid">
            <div class="row">
                <div class="col align-middle text-center">
                    <h3>Fetch Data Privileges in Process</h3>
                    <small>Refresh Page Using Button Below If There is No Response</small>
                    <br />
                    <button type="button" class="btn btn-primary my-4" @onclick="(() => StateHasChanged())"><b>Refresh Page</b></button>
                </div>
            </div>
        </div>
    }
}

@if (isLoading)
{
    <div class="modal show" id="splashLoading" tabindex="-5" role="dialog" aria-labelledby="splashLoadingDialog" aria-hidden="true" style="display:block; background: rgba(0,0,0, 0.7);">
        <BPIWebApplication.Client.Shared.CustomLayout.SplashScreen></BPIWebApplication.Client.Shared.CustomLayout.SplashScreen>
    </div>
}

@*Item Case Document Preview Modal*@
<div class="modal fade" id="itemCasePreviewModal" tabindex="-1" role="dialog" aria-labelledby="itemCasePreviewLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header cus-bg">
                <h5 class="modal-title fw-bold" id="itemCasePreviewLabel"><i class="oi oi-document"></i> Item Case Document Preview</h5>
                <button type="button" class="close" data-dismiss="modal" data-target="#incidentAccidentPreviewModal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col fw-bold">Document ID</div>
                    <div class="col">: @previewItemCase.DocumentID</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Report Date</div>
                    <div class="col">: @previewItemCase.ReportDate.ToString("dd MMMM yyyy")</div>
                </div>
                @{
                    var ariskSubType = EPKRSService.riskSubTypes.SingleOrDefault(x => x.SubRiskID.Equals(previewItemCase.SubRiskID));
                    var ariskType = (ariskSubType != null ? EPKRSService.riskTypes.SingleOrDefault(x => x.RiskID.Equals(ariskSubType.RiskID)) : null);
                }
                <div class="row mb-4">
                    <div class="col fw-bold">Risk Type</div>
                    <div class="col">: @(ariskType != null ? ariskType.RiskDescription : "")</div>
                </div>
                <div class="row mb-4">
                    <div class="col fw-bold">Risk Sub Type</div>
                    <div class="col">: @(ariskSubType != null ? ariskSubType.SubRiskDescription : "")</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Site Reporter</div>
                    <div class="col">: @(ManagementService.locations.SingleOrDefault(x => x.locationId.Equals(previewItemCase.SiteReporter)) == null ? previewItemCase.SiteReporter.Equals("HO") ? "HEAD OFFICE" : previewItemCase.SiteReporter : ManagementService.locations.SingleOrDefault(x => x.locationId.Equals(previewItemCase.SiteReporter)).locationName)</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Site Sender</div>
                    <div class="col">: @(ManagementService.locations.SingleOrDefault(x => x.locationId.Equals(previewItemCase.SiteSender)) == null ? previewItemCase.SiteReporter.Equals("HO") ? "HEAD OFFICE" : previewItemCase.SiteReporter : ManagementService.locations.SingleOrDefault(x => x.locationId.Equals(previewItemCase.SiteSender)).locationName)</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Loading Document ID</div>
                    <div class="col">: @previewItemCase.LoadingDocumentID</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Loading Document Date</div>
                    <div class="col">: @previewItemCase.LoadingDocumentDate.ToString("dd MMMM yyyy")</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Item Pickup Date</div>
                    <div class="col">: @previewItemCase.ItemPickupDate.ToString("dd MMMM yyyy")</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Late Status</div>
                    <div class="col">: @(previewItemCase.isLate.Equals(true) ? "Late" : "On Time")</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Variance</div>
                    <div class="col">: @previewItemCase.VarianceDate Day(s)</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">CCTV Status</div>
                    <div class="col">: @(previewItemCase.isCCTVCoverable.Equals(true) ? "Covered" : "Not Covered") </div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Report Sender Status</div>
                    <div class="col">: @(previewItemCase.isReportedtoSender.Equals(true) ? "Reported" : "Not Reported")</div>
                </div>

                @if (previewItemCase.DocumentStatus.Equals("OnProgress") || previewItemCase.DocumentStatus.Equals("Closed"))
                {
                    <div class="row">
                        <div class="col fw-bold">RISK Mitigation Plan</div>
                        <div class="col">: @previewItemCase.ExtendedMitigationPlan</div>
                    </div>
                }

                <div class="row my-3">
                    <div class="col">
                        <p class="fw-bold"><i class="oi oi-paperclip"></i> Attachment </p>

                        @if (checkPreviewCaseAttachment())
                        {
                            <div class="row flex-row flex-nowrap wrap-card overflow-auto">
                                @foreach (var file in previewCaseAttachment)
                                {
                                    @if (EPKRSService.fileStreams.SingleOrDefault(x => x.fileName.Equals(file.FilePath)) == null)
                                        continue;

                                    <div style="width: 280px;">
                                        <div class="card" id="balanceCard" @onclick="@(async () => { await HandleViewDocument(EPKRSService.fileStreams.SingleOrDefault(x => x.fileName.Equals(file.FilePath)).content, file.FilePath.Split("!_!")[1]); })">
                                            <div class="card-body">
                                                <h6 class="card-title text-wrap text-truncate"><b> @file.FilePath.Split("!_!")[1] </b></h6>
                                            </div>
                                            <div class="card-footer">
                                                <small class="text-muted"><i> #@file.LineNum - Click To View File</i></small>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-warning alert-dismissible fade show my-2" role="alert">
                                <strong>Empty Attachment !</strong>
                            </div>
                        }
                    </div>
                </div>

                <div class="row">
                    <div class="col">
                        @if (checkPreviewItemLine())
                        {
                            <div class="table-responsive">
                                <table class="table table-sm table-hover" style="width: 100%">
                                    <caption>
                                        @*Total @previewItemLine.Count() Item(s) in Report*@
                                    </caption>
                                    <thead>
                                        <tr>
                                            <th scope="col" class="text-center align-middle text-wrap" style="width: 17%; font-size: 15px;">TR ID</th>
                                            <th scope="col" class="text-center align-middle text-wrap" style="width: 11%; font-size: 15px;">TR Date</th>
                                            <th scope="col" class="text-center align-middle text-wrap" style="width: 11%; font-size: 15px;">Item Code</th>
                                            <th scope="col" class="text-center align-middle text-wrap" style="width: 21%; font-size: 15px;">Item Desc.</th>
                                            <th scope="col" class="text-center align-middle text-wrap" style="width: 11%; font-size: 15px;">Risk Type</th>
                                            <th scope="col" class="text-center align-middle text-wrap" style="width: 5%; font-size: 15px;">Qty</th>
                                            <th scope="col" class="text-center align-middle text-wrap" style="width: 5%; font-size: 15px;">UOM</th>
                                            <th scope="col" class="text-center align-middle text-wrap" style="width: 14%; font-size: 15px;">Value</th>
                                            <th scope="col" class="text-center align-middle text-wrap" style="width: 5%; font-size: 15px;">Stock</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in previewItemLine)
                                        {
                                            <tr>
                                                <td class="text-center align-middle text-wrap" style="font-size:14px;">@item.TRID</td>
                                                <td class="text-center align-middle text-wrap" style="font-size:14px;">@item.TRDate.ToString("dd/MM/yyyy")</td>
                                                <td class="text-center align-middle text-wrap" style="font-size:14px;">@item.ItemCode</td>
                                                <td class="text-center align-middle text-wrap" style="font-size:14px;">@item.ItemDescription</td>
                                                <td class="text-center align-middle text-wrap" style="font-size:14px;">@item.ItemRiskCategoryID</td>
                                                <td class="text-center align-middle text-wrap" style="font-size:14px;">@item.ItemQuantity</td>
                                                <td class="text-center align-middle text-wrap" style="font-size:14px;">@item.UOM</td>
                                                <td class="text-center align-middle text-wrap" style="font-size:14px;">Rp. @item.ItemValue.ToString("N0") ,-</td>
                                                <td class="text-center align-middle text-wrap" style="font-size:14px;">@item.ItemStock</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            
                        }
                    </div>
                </div>
            </div>
            <div class="modal-footer cus-bg">
                @if (LoginService.activeUser.userPrivileges.Contains("AP"))
                {
                    <button type="button" class="btn btn-warning mt-1 fw-bold" data-toggle="modal" data-target="#approvalModal" @onclick="@(() => setDocumentApprovalData("Approve"))" disabled="@(previewItemCase.DocumentStatus.Equals("Open") ? null : "disabled")"><i class="oi oi-task"></i> Approve Report</button>
                    <button type="button" class="btn btn-dark mt-1 fw-bold" data-dismiss="modal" data-target="#itemCasePreviewModal" @onclick="@(() => redirectDocumentEdit("ITEMC"))" disabled="@(previewItemCase.DocumentStatus.Equals("Open") ? null : "disabled")"><i class="oi oi-pencil"></i> Edit</button>
                }
                @if (LoginService.activeUser.userPrivileges.Contains("CF"))
                {
                    <button type="button" class="btn btn-warning mt-1 fw-bold" data-toggle="modal" data-target="#onprogressModal" @onclick="@(() => setDocumentApprovalData("OnProgress"))" disabled="@(previewItemCase.DocumentStatus.Equals("Approved") ? null : "disabled")"><i class="oi oi-flag"></i> Report On Progress</button>
                }
                @if (LoginService.activeUser.userPrivileges.Contains("RL"))
                {
                    <button type="button" class="btn btn-warning mt-1 fw-bold" data-toggle="modal" data-target="#approvalModal" @onclick="@(() => setDocumentApprovalData("Close"))"><i class="oi oi-lock-locked" disabled="@(previewItemCase.DocumentStatus.Equals("OnProgress") ? null : "disabled")"></i> Close Report</button>
                }
                @if (LoginService.activeUser.userPrivileges.Contains("ED"))
                {
                    <button type="button" class="btn btn-dark mt-1 fw-bold" data-dismiss="modal" data-target="#itemCasePreviewModal" @onclick="@(() => redirectDocumentEdit("ITEMC"))"><i class="oi oi-pencil"></i> Edit</button>
                }
                @if (LoginService.activeUser.userPrivileges.Contains("DL"))
                {
                    <button type="button" class="btn btn-danger mt-1 fw-bold" data-toggle="modal" data-target="#approvalModal" @onclick="@(() => setDocumentApprovalData("Delete"))"><i class="oi oi-basket"></i> Delete</button>
                }
                <button type="button" class="btn btn-primary-cus mt-1" data-toggle="modal" data-target="#discussionModal"><i class="oi oi-chat"></i> Discussion Panel 
                    @{
                        var unreadCountC = EPKRSService.documentDiscussions.ExceptBy(EPKRSService.documentDiscussionReadHistories.Select(f => f.rowGuid), g => g.rowGuid).Where(h => h.DocumentID.Equals(previewItemCase.DocumentID)).ToList().Count;
                    }
                    @if (unreadCountC > 0)
                    {
                        <span class="badge bg-danger text-white">@unreadCountC.ToString("N0")</span>
                    }
                </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" data-target="#itemCasePreviewModal"><i class="oi oi-x"></i> Close</button>
            </div>
        </div>
    </div>
</div>

@*Incident Accident Document Preview Modal*@
<div class="modal fade" id="incidentAccidentPreviewModal" tabindex="-1" role="dialog" aria-labelledby="incidentAccidentPreviewLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header cus-bg">
                <h5 class="modal-title fw-bold" id="incidentAccidentPreviewLabel"><i class="oi oi-document"></i> Incident Accident Document Preview</h5>
                <button type="button" class="close" data-dismiss="modal" data-target="#incidentAccidentPreviewModal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="border border-2 p-2">
                    <div class="row">
                        <div class="col align-middle text-center">
                            <h5 class="fw-bold my-auto"> @previewIncidentAccident.DocumentID </h5>
                            <p class="my-auto"><small> Report Date : @previewIncidentAccident.ReportDate.ToString("dddd, dd MMMM yyyy") </small></p>
                            <p class="my-auto"><b> Document Status </b> - <em> @previewIncidentAccident.DocumentStatus </em></p>
                        </div>
                    </div>
                </div>

                <div class="row mt-4">
                    <div class="col fw-bold">Site Reporter</div>
                    <div class="col">: @previewIncidentAccident.SiteReporter</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Department Reporter</div>
                    <div class="col">: @((ManagementService.departments.SingleOrDefault(x => x.DepartmentID.Equals(previewIncidentAccident.DepartmentReporter)) == null) ? previewIncidentAccident.DepartmentReporter : ManagementService.departments.SingleOrDefault(x => x.DepartmentID.Equals(previewIncidentAccident.DepartmentReporter)).DepartmentName)  </div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Risk RP</div>
                    <div class="col">: @previewIncidentAccident.RiskRPName - <em> @previewIncidentAccident.RiskRPEmail </em></div>
                </div>
                <div class="row mb-4">
                    <div class="col fw-bold">DORM</div>
                    <div class="col">: @previewIncidentAccident.DORMName - <em> @previewIncidentAccident.DORMEmail </em></div>
                </div>

                @*split*@

                <div class="row mt-4">
                    <div class="col fw-bold">Case Description</div>
                    <div class="col">: @previewIncidentAccident.CaseDescription</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Occurence Date</div>
                    <div class="col">: @previewIncidentAccident.OccurenceDate.ToString("dddd, dd MMMM yyyy")</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Department Affected</div>
                    <div class="col">: @((ManagementService.departments.SingleOrDefault(x => x.DepartmentID.Equals(previewIncidentAccident.DepartmentAffected)) == null) ? previewIncidentAccident.DepartmentAffected : ManagementService.departments.SingleOrDefault(x => x.DepartmentID.Equals(previewIncidentAccident.DepartmentAffected)).DepartmentName) </div>
                </div>
                @{
                    var briskSubType = EPKRSService.riskSubTypes.SingleOrDefault(x => x.SubRiskID.Equals(previewIncidentAccident.SubRiskID));
                    var briskType = (briskSubType != null ? EPKRSService.riskTypes.SingleOrDefault(x => x.RiskID.Equals(briskSubType.RiskID)) : null);
                }
                <div class="row">
                    <div class="col fw-bold">Risk Type</div>
                    <div class="col">: @(briskType != null ? briskType.RiskDescription : "")</div>
                </div>
                <div class="row mb-4">
                    <div class="col fw-bold">Risk Sub Type</div>
                    <div class="col">: @(briskSubType != null ? briskSubType.SubRiskDescription : "")</div>
                </div>

                @*split*@

                <div class="row mt-4">
                    <div class="col fw-bold">Cronology</div>
                    <div class="col text-wrap">: @previewIncidentAccident.Cronology</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Root Cause</div>
                    <div class="col text-wrap">: @previewIncidentAccident.RootCause</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Loss Description</div>
                    <div class="col text-wrap">: @previewIncidentAccident.LossDescription</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Loss Estimation</div>
                    <div class="col">: Rp. @previewIncidentAccident.LossEstimation.ToString("N0") ,-</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Return Amount</div>
                    <div class="col">: Rp. @previewIncidentAccident.ReturnAmount.ToString("N0") ,-</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Risk Description</div>
                    <div class="col text-wrap">: @previewIncidentAccident.RiskDescription</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Cause Description</div>
                    <div class="col text-wrap">: @previewIncidentAccident.CauseDescription</div>
                </div>
                <div class="row mb-4">
                    <div class="col fw-bold">Action Plan</div>
                    <div class="col text-wrap">: @previewIncidentAccident.ActionPlan</div>
                </div>

                @*split*@

                <div class="row mt-4">
                    <div class="col fw-bold">PIC</div>
                    <div class="col">: @previewIncidentAccident.PIC</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Target Date</div>
                    <div class="col">: @previewIncidentAccident.TargetDate.ToString("dddd, dd MMMM yyyy")</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Mitigation Plan</div>
                    <div class="col text-wrap">: @previewIncidentAccident.MitigationPlan</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Mitigation Date</div>
                    <div class="col">: @previewIncidentAccident.MitigationDate.ToString("dddd, dd MMMM yyyy")</div>
                </div>

                @if (previewIncidentAccident.DocumentStatus.Equals("OnProgress") || previewIncidentAccident.DocumentStatus.Equals("Closed"))
                {
                    <div class="row mt-4">
                        <div class="col fw-bold">RISK Root Cause</div>
                        <div class="col">: @previewIncidentAccident.ExtendedRootCause</div>
                    </div>
                    <div class="row">
                        <div class="col fw-bold">RISK Mitigation Plan</div>
                        <div class="col">: @previewIncidentAccident.ExtendedMitigationPlan</div>
                    </div>
                }

                @if (checkPreviewApproval())
                {
                    <div id="accordionApproval" class="my-2" style="width: 100%;">

                        <div class="card" style="width: 100%;">
                            <div class="card-header" id="epkrsAccordionHeaderApr">
                                <div class="border border-1">
                                    <button id="epkrstitleapr" class="btn w-100" data-toggle="collapse" data-target="#epkrsApprovalLists" aria-expanded="true" aria-controls="epkrsApprovalLists">
                                        <b>EPKRS Approval List(s)</b>
                                    </button>
                                </div>
                            </div>

                            <div id="epkrsApprovalLists" class="collapse bg-special" aria-labelledby="epkrstitleapr" data-parent="#accordionApproval">
                                <div class="card-body">
                                    @foreach (var apv in previewDocumentListApproval)
                                    {
                                        <div class="row my-1">
                                            <div class="col">
                                                <label class="fw-bold" for="@(apv.ApprovalAction)_user">@apv.ApprovalAction User :</label>
                                                <input type="text" id="@(@apv.ApprovalAction)_user" value="@apv.Approver" class="form-control-sm w-100 border-1" readonly />
                                            </div>
                                            <div class="col">
                                                <label class="fw-bold" for="@(@apv.ApprovalAction)_date">@apv.ApprovalAction Date :</label>
                                                <input type="text" id="@(@apv.ApprovalAction)_date" value="@apv.ApproveDate.ToString("dddd, dd MMMM yyyy HH:mm:ss")" class="form-control-sm w-100 border-1" readonly />
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>

                    </div>
                }

                @if (checkPreviewPartyInvolved())
                {
                    <div id="accordionInvolver" class="my-2" style="width: 100%;">

                        <div class="card" style="width: 100%;">
                            <div class="card-header" id="epkrsAccordionHeaderInv">
                                <div class="border border-1">
                                    <button id="epkrstitleinv" class="btn w-100" data-toggle="collapse" data-target="#epkrsInvolverLists" aria-expanded="true" aria-controls="epkrsInvolverLists">
                                        <b>EPKRS Person Involved List(s)</b>
                                    </button>
                                </div>
                            </div>

                            <div id="epkrsInvolverLists" class="collapse bg-special" aria-labelledby="epkrstitleinv" data-parent="#accordionInvolver">
                                <div class="card-body">
                                    @foreach (var type in previewIncidentAccidentInvolver.DistinctBy(x => x.InvolverTypeID))
                                    {
                                        var invType = EPKRSService.involverType.SingleOrDefault(x => x.InvolverTypeID.Equals(type.InvolverTypeID));
                                        
                                        <p class="p-0 m-0 text-center fw-bold">
                                            @(invType != null ? invType.InvolverTypeDescription : "NaN")
                                        </p>

                                        @foreach (var involver in previewIncidentAccidentInvolver.Where(y => y.InvolverTypeID.Equals(type.InvolverTypeID)))
                                        {
                                            
                                            var dept = ManagementService.departments.SingleOrDefault(x => x.DepartmentID.Equals(involver.InvolverDept));
                                            
                                            <div class="row mb-2">
                                                <div class="col">
                                                    <label class="fw-bold">Name :</label>
                                                    <input type="text" value="@involver.InvolverName" class="form-control-sm w-100 border-1" readonly />
                                                </div>
                                                <div class="col">
                                                    <label class="fw-bold">Department :</label>
                                                    <input type="text" value="@(dept != null ? dept.DepartmentName : "NaN")" class="form-control-sm w-100 border-1" readonly />
                                                </div>
                                                <div class="col">
                                                    <label class="fw-bold">Position :</label>
                                                    <input type="text" value="@involver.InvolverPosition" class="form-control-sm w-100 border-1" readonly />
                                                </div>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>

                    </div>
                }
                
                <div class="row my-3">
                    <div class="col">
                        <p class="fw-bold text-center"><i class="oi oi-paperclip"></i> Attachment(s) </p>

                        @if (checkPreviewCaseAttachment())
                        {
                            <div class="row flex-row flex-nowrap wrap-card overflow-auto">
                                @foreach (var file in previewCaseAttachment)
                                {
                                    @if (EPKRSService.fileStreams.SingleOrDefault(x => x.fileName.Equals(file.FilePath)) == null)
                                        continue;

                                    <div style="width: 280px;">
                                        <div class="card" id="balanceCard" @onclick="@(async () => { await HandleViewDocument(EPKRSService.fileStreams.SingleOrDefault(x => x.fileName.Equals(file.FilePath)).content, file.FilePath.Split("!_!")[1]); })">
                                            <div class="card-body">
                                                <h6 class="card-title text-wrap text-truncate"><b> @file.FilePath.Split("!_!")[1] </b></h6>
                                            </div>
                                            <div class="card-footer">
                                                <small class="text-muted"><i> #@file.LineNum - Click To View File</i></small>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-warning alert-dismissible fade show my-2" role="alert">
                                <strong>Empty Attachment !</strong>
                            </div>
                        }
                    </div>
                </div>

            </div>
            <div class="modal-footer cus-bg">
                @if (LoginService.activeUser.userPrivileges.Contains("AP"))
                {
                    <button type="button" class="btn btn-warning mt-1 fw-bold" data-toggle="modal" data-target="#approvalModal" @onclick="@(() => setDocumentApprovalData("Approve"))" disabled="@(previewIncidentAccident.DocumentStatus.Equals("Open") ? null : "disabled")"><i class="oi oi-task"></i> Approve Report</button>
                    <button type="button" class="btn btn-dark mt-1 fw-bold" data-dismiss="modal" data-target="#incidentAccidentPreviewModal" @onclick="@(() => redirectDocumentEdit("INCAC"))" disabled="@(previewIncidentAccident.DocumentStatus.Equals("Open") ? null : "disabled")"><i class="oi oi-pencil"></i> Edit</button>
                }
                @if (LoginService.activeUser.userPrivileges.Contains("CF"))
                {
                    <button type="button" class="btn btn-warning mt-1 fw-bold" data-toggle="modal" data-target="#onprogressModal" @onclick="@(() => setDocumentApprovalData("OnProgress"))" disabled="@(previewIncidentAccident.DocumentStatus.Equals("Approved") ? null : "disabled")"><i class="oi oi-flag"></i> Report On Progress</button>
                }
                @if (LoginService.activeUser.userPrivileges.Contains("RL"))
                {
                    <button type="button" class="btn btn-warning mt-1 fw-bold" data-toggle="modal" data-target="#approvalModal" @onclick="@(() => setDocumentApprovalData("Close"))" disabled="@(previewIncidentAccident.DocumentStatus.Equals("OnProgress") ? null : "disabled")"><i class="oi oi-lock-locked"></i> Close Report</button>
                }
                @if (LoginService.activeUser.userPrivileges.Contains("ED"))
                {
                    <button type="button" class="btn btn-dark mt-1 fw-bold" data-dismiss="modal" data-target="#incidentAccidentPreviewModal" @onclick="@(() => redirectDocumentEdit("INCAC"))"><i class="oi oi-pencil"></i> Edit</button>
                }
                @if (LoginService.activeUser.userPrivileges.Contains("DL"))
                {
                    <button type="button" class="btn btn-danger mt-1 fw-bold" data-toggle="modal" data-target="#approvalModal" @onclick="@(() => setDocumentApprovalData("Delete"))"><i class="oi oi-basket"></i> Delete</button>
                }
                <button type="button" class="btn btn-primary-cus mt-1" data-toggle="modal" data-target="#discussionModal" @onclick="(async () => await setDocumentDiscussionPreviewData(previewIncidentAccident.DocumentID, previewIncidentAccident.SiteReporter))"><i class="oi oi-chat"></i> Discussion Panel 
                    @{
                        var unreadCountD = EPKRSService.documentDiscussions.ExceptBy(EPKRSService.documentDiscussionReadHistories.Select(f => f.rowGuid), g => g.rowGuid).Where(h => h.DocumentID.Equals(previewIncidentAccident.DocumentID)).ToList().Count;
                    }
                    @if (unreadCountD > 0) 
                    {
                        <span class="badge bg-danger text-white">@unreadCountD.ToString("N0")</span>
                    }
                </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" data-target="#incidentAccidentPreviewModal"><i class="oi oi-x"></i> Close</button>
            </div>
        </div>
    </div>
</div>

@*Document Discussion Modal*@
<div class="modal fade" id="discussionModal" tabindex="-2" role="dialog" aria-labelledby="discussionModalLabel" aria-hidden="true" style="background: rgba(0,0,0, 0.2);">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header cus-bg">
                <h5 class="modal-title fw-bold" id="discussionModalLabel"><i class="oi oi-chat"></i> Document Discussion</h5>
                <button type="button" class="close" data-dismiss="modal" data-target="#discussionModal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                @if (LoginService.activeUser.userPrivileges.Contains("CR"))
                {
                    <div class="card">
                        <div class="card-header">
                            Let&quot;s Start a New Discussion
                        </div>
                        <div class="card-body">
                            <EditForm Model="@uploadDocumentDiscussion" OnSubmit="createDocumentDiscussion">
                                <InputTextArea id="cronology" @bind-Value="uploadDocumentDiscussion.Comment" placeholder="Write a Comment .." class="form-control mb-3" readonly="@(isLoading || triggerReplyButton ? "readonly" : null)"></InputTextArea>

                                @if (checkFileDiscussUpload())
                                {
                                    <ul class="list-group mb-3">
                                        @foreach (var attachedFile in fileDiscussionUpload)
                                        {
                                            <li class="list-group-item">@attachedFile.fileName.Split("!_!")[1]</li>
                                        }
                                    </ul>
                                }

                                <label for="discussionUploadFile" class="btn btn-primary-cus @(triggerReplyButton.Equals(false) ? null : "disabled")"><i class="oi oi-paperclip"></i> Attach</label>
                                <InputFile id="discussionUploadFile" accept=".pdf" multiple hidden disabled="@(isLoading || triggerReplyButton ? "disabled" : null)" OnChange="@((InputFileChangeEventArgs args) => UploadHandleSelection(args, "New"))"></InputFile>
                                <button type="submit" class="btn btn-primary-cus" disabled="@(isLoading || triggerReplyButton ? "disabled" : null)"><i class="oi oi-chat"></i> Comment</button>
                            </EditForm>
                        </div>
                    </div>
                }
                
                @if (checkDocumentDiscussions())
                {
                    @foreach (var discussion in previewDocumentDiscussion.OrderByDescending(x => x.CommentDate))
                    {
                        @if (!discussion.ReplyRowGuid.Equals(""))
                            continue;

                        <div class="card mt-2">
                            <div class="card-header">
                                <b> Topic #@discussion.rowGuid.Split("-")[0] </b>
                            </div>
                            <div class="card-body">
                                <blockquote class="blockquote mb-0">
                                    <p>@discussion.Comment</p>
                                    <footer class="blockquote-footer">Commented by @discussion.UserName on @discussion.CommentDate.ToString("dddd, dd MMMM yyyy HH:mm:ss")</footer>
                                </blockquote>

                                @if (LoginService.activeUser.userPrivileges.Contains("CR"))
                                {
                                    @if (!triggerReplyButton)
                                    {
                                        <p class="mb-0 mt-3">
                                            <button class="btn btn-primary-cus" type="button" disabled="@(isLoading ? "disabled" : null)" @onclick="(() => triggerReplyButton = !triggerReplyButton)" data-toggle="collapse" data-target="#@discussion.formId" aria-expanded="false" aria-controls="@discussion.formId">
                                                <i class="oi oi-chat"></i> Reply
                                            </button>
                                        </p>
                                    }

                                    <div class="collapse" id="@discussion.formId">
                                        <div class="card card-body">
                                            <EditForm Model="@uploadReplyDocumentDiscussion" OnSubmit="(() => replyDiscussion(discussion))">
                                                <InputTextArea id="cronology" @bind-Value="uploadReplyDocumentDiscussion.Comment" placeholder="Write a Comment .." class="form-control mb-3" readonly="@(isLoading || !triggerReplyButton ? "readonly" : null)"></InputTextArea>

                                                @if (checkReplyFileDiscussUpload())
                                                {
                                                    <ul class="list-group mb-3">
                                                        @foreach (var attachedFile in fileReplyDiscussionUpload)
                                                        {
                                                            <li class="list-group-item">@attachedFile.fileName.Split("!_!")[1]</li>
                                                        }
                                                    </ul>
                                                }

                                                <button class="btn btn-secondary" type="button" disabled="@(isLoading ? "disabled" : null)" @onclick="(() => triggerReplyButton = !triggerReplyButton)" data-toggle="collapse" data-target="#@discussion.formId" aria-expanded="false" aria-controls="@discussion.formId">
                                                    <i class="oi oi-collapse-up"></i> Hide
                                                </button>
                                                <label for="discussionReplyUploadFile" class="btn btn-primary-cus @(triggerReplyButton.Equals(false) ? "disabled" : null)"><i class="oi oi-paperclip"></i> Reply Attach</label>
                                                <InputFile id="discussionReplyUploadFile" accept=".pdf" multiple hidden disabled="@(isLoading || !triggerReplyButton ? "disabled" : null)" OnChange="@((InputFileChangeEventArgs args) => UploadHandleSelection(args, "Reply"))"></InputFile>
                                                <button type="submit" class="btn btn-primary-cus" disabled="@(isLoading || !triggerReplyButton ? "disabled" : null)"><i class="oi oi-chat"></i> Reply Comment</button>
                                            </EditForm>
                                        </div>
                                    </div>
                                }

                                @if (previewDocumentDiscussion.Any(x => x.ReplyRowGuid.Equals(discussion.rowGuid)))
                                {
                                    @foreach (var reply in previewDocumentDiscussion.Where(x => x.ReplyRowGuid.Equals(discussion.rowGuid)).OrderByDescending(x => x.CommentDate))
                                    {
                                        <div class="card mt-2">
                                            <div class="card-body">
                                                <blockquote class="blockquote mb-0">
                                                    <p>@reply.Comment</p>
                                                    <footer class="blockquote-footer">Replied by @reply.UserName on @reply.CommentDate.ToString("dddd, dd MMMM yyyy HH:mm:ss")</footer>
                                                </blockquote>
                                            </div>
                                        </div>                                        
                                    }
                                }
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="alert alert-warning alert-dismissible fade show my-2" role="alert">
                        <strong>Empty Discussion !</strong>
                    </div>
                }
            </div>
            <div class="modal-footer cus-bg">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" data-target="#discussionModal"><i class="oi oi-x"></i> Close</button>
            </div>
        </div>
    </div>
</div>

@*Document Approve Modal*@
<div class="modal fade" id="approvalModal" tabindex="-3" role="dialog" aria-labelledby="approvalModalLabel" aria-hidden="true" style="background: rgba(0,0,0, 0.2);">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header cus-bg">
                <h5 class="modal-title fw-bold" id="approvalModalLabel"><i class="oi oi-pin"></i> Document Approval</h5>
                <button type="button" class="close" data-dismiss="modal" data-target="#approvalModal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col fw-bold text-wrap">Process PKRS Document as follow below, Are you sure ?</div>
                </div>
                <div class="row mt-4">
                    <div class="col fw-bold">Document ID</div>
                    <div class="col">: @previewDocumentApproval.DocumentID</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Action</div>
                    <div class="col">: @previewDocumentApproval.ApprovalAction</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">User</div>
                    <div class="col">: @previewDocumentApproval.Approver</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Action Date</div>
                    <div class="col">: @previewDocumentApproval.ApproveDate.ToString("dddd, dd MMMM yyyy")</div>
                </div>
            </div>
            <div class="modal-footer cus-bg">
                @{
                    var itemCasedt = EPKRSService.itemCases.SingleOrDefault(x => x.itemCase.DocumentID.Equals(previewDocumentApproval.DocumentID));
                    var incAccdt = EPKRSService.incidentAccidents.SingleOrDefault(x => x.incidentAccident.DocumentID.Equals(previewDocumentApproval.DocumentID));
                }
                @if (LoginService.activeUser.userPrivileges.Contains("AP"))
                {
                    <button type="button" class="btn btn-success fw-bold"
                            disabled="@(previewDocumentApproval.ApprovalAction.Equals("Approve") ? null : "disabled")"
                            @onclick="@(() => createDocumentApprove("Approve"))"><i class="oi oi-thumb-up"></i> Approve !</button>
                }
                @if (LoginService.activeUser.userPrivileges.Contains("RL"))
                {
                    <button type="button" class="btn btn-danger fw-bold"
                            disabled="@(previewDocumentApproval.ApprovalAction.Equals("Close") ? null : "disabled")"
                            @onclick="@(() => createDocumentApprove("Close"))"><i class="oi oi-thumb-up"></i> Close !</button>
                }
                @if (LoginService.activeUser.userPrivileges.Contains("DL"))
                {
                    if (itemCasedt != null)
                    {
                        <button type="button" class="btn btn-danger fw-bold"
                            disabled="@(previewDocumentApproval.ApprovalAction.Equals("Delete") ? null : "disabled")"
                            @onclick="@(() => deleteEPKRSDocument("ITCASE"))"><i class="oi oi-thumb-up"></i> Delete !</button>
                    }
                    if (incAccdt != null) 
                    {
                        <button type="button" class="btn btn-danger fw-bold"
                            disabled="@(previewDocumentApproval.ApprovalAction.Equals("Delete") ? null : "disabled")"
                            @onclick="@(() => deleteEPKRSDocument("INCAC"))"><i class="oi oi-thumb-up"></i> Delete !</button>
                    }
                }
                <button type="button" class="btn btn-secondary" data-dismiss="modal" data-target="#approvalModal"><i class="oi oi-thumb-down"></i> Cancel</button>
            </div>
        </div>
    </div>
</div>

@*Document Onprogress Modal*@
<div class="modal fade" id="onprogressModal" tabindex="-3" role="dialog" aria-labelledby="onprogressModalLabel" aria-hidden="true" style="background: rgba(0,0,0, 0.2);">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header cus-bg">
                <h5 class="modal-title fw-bold" id="onprogressModalLabel"><i class="oi oi-pin"></i> Mark Document as On Progress</h5>
                <button type="button" class="close" data-dismiss="modal" data-target="#onprogressModal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col fw-bold text-wrap">Process PKRS Document Status as On Progress, Are you sure ?</div>
                </div>
                <div class="row mt-4">
                    <div class="col fw-bold">Document ID</div>
                    <div class="col">: @previewDocumentApproval.DocumentID</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Approval Action</div>
                    <div class="col">: @previewDocumentApproval.ApprovalAction</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">User</div>
                    <div class="col">: @previewDocumentApproval.Approver</div>
                </div>
                <div class="row">
                    <div class="col fw-bold">Action Date</div>
                    <div class="col">: @previewDocumentApproval.ApproveDate.ToString("dddd, dd MMMM yyyy")</div>
                </div>
                
                @if (EPKRSService.itemCases.SingleOrDefault(x => x.itemCase.DocumentID.Equals(previewDocumentApproval.DocumentID)) != null)
                {
                    <EditForm Model="@updateItemCase" class="my-3">
                        <div class="row">
                            <div class="col">
                                <label for="ext_mitigation">RISK Mitigation Plan :</label>
                                <InputTextArea id="ext_mitigation" @bind-Value="updateItemCase.ExtendedMitigationPlan" class="form-control" disabled="@(updateItemCase.DocumentStatus.Equals("Closed") ? "disabled" : null)"></InputTextArea>
                            </div>
                        </div>
                    </EditForm>
                }

                @if (EPKRSService.incidentAccidents.SingleOrDefault(x => x.incidentAccident.DocumentID.Equals(previewDocumentApproval.DocumentID)) != null)
                {
                    <EditForm Model="@updateIncidentAccident" class="my-3">
                        <div class="row">
                            <div class="col">
                                <label for="ext_rootcause">RISK Root Cause :</label>
                                <InputTextArea id="ext_rootcause" @bind-Value="updateIncidentAccident.ExtendedRootCause" class="form-control" disabled="@(updateIncidentAccident.DocumentStatus.Equals("Closed") ? "disabled" : null)"></InputTextArea>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <label for="ext_mitigation">RISK Mitigation Plan :</label>
                                <InputTextArea id="ext_mitigation" @bind-Value="updateIncidentAccident.ExtendedMitigationPlan" class="form-control" disabled="@(updateIncidentAccident.DocumentStatus.Equals("Closed") ? "disabled" : null)"></InputTextArea>
                            </div>
                        </div>
                    </EditForm>

                    <div class="row mb-3">
                        <div class="col">
                            <button type="button" title="Add New Line" class="btn btn-sm btn-warning" @onclick="(() => partyInvolved.Add(new()))"><b>Add Person Involved</b></button>
                        </div>
                    </div>

                    @if (checkPartyInvolved())
                    {
                        <table class="table table-sm table-bordered" style="width: 100%">
                            <thead>
                                <tr>
                                    <th class="text-center align-middle text-wrap" style="width: 5%;">Action</th>
                                    <th class="text-center align-middle text-wrap" style="width: 20%;">Type</th>
                                    <th class="text-center align-middle text-wrap" style="width: 30%;">Name</th>
                                    <th class="text-center align-middle text-wrap" style="width: 25%;">Department</th>
                                    <th class="text-center align-middle text-wrap" style="width: 20%;">Position</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var person in partyInvolved)
                                {
                                    <tr>
                                        <td class="text-center align-middle text-wrap">
                                            <button type="button" class="btn btn-sm btn-danger h-100 w-100" @onclick="(() => partyInvolved.Remove(person))"><i class="oi oi-delete"></i></button>
                                        </td>
                                        <td class="text-center align-middle text-wrap">
                                            <select id="dept_id" @bind="person.InvolverTypeID" class="form-select">
                                                <option hidden value="BLANK">Select Type</option>   

                                                @foreach (var type in EPKRSService.involverType)
                                                {
                                                    <option value="@type.InvolverTypeID">@type.InvolverTypeDescription</option>
                                                }
                                            </select>
                                        </td>
                                        <td class="text-center align-middle text-wrap">
                                            <input type="text" class="form-control-sm w-100" @bind-value="person.InvolverName" />
                                        </td>
                                        <td class="text-center align-middle text-wrap">
                                            <select id="dept_id" @bind="person.InvolverDept" class="form-select">
                                                <option hidden value="BLANK">Select Department</option>

                                                @foreach (var dept in ManagementService.departments)
                                                {
                                                    <option value="@dept.DepartmentID">@dept.DepartmentName</option>
                                                }
                                            </select>
                                        </td>
                                        <td class="text-center align-middle text-wrap">
                                            <input type="text" class="form-control-sm w-100" @bind-value="person.InvolverPosition" />
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <div class="alert alert-warning alert-dismissible fade show my-3" role="alert">
                            <strong>No Party Involved !</strong>
                        </div>
                    }
                }

            </div>
            <div class="modal-footer cus-bg">
                <button type="button" class="btn btn-success fw-bold"
                        disabled="@(previewDocumentApproval.ApprovalAction.Equals("OnProgress") ? null : "disabled")"
                        @onclick="@(() => createDocumentApproveExtended("OnProgress"))">
                    <i class="oi oi-thumb-up"></i> On Progress !
                </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" data-target="#onprogressModal"><i class="oi oi-thumb-down"></i> Cancel</button>
            </div>
        </div>
    </div>
</div>